# base-files version 3.9-3

# To pick up the latest recommended .inputrc content,
# look in /etc/defaults/etc/skel/.inputrc

# Modifying /etc/skel/.inputrc directly will prevent
# setup from updating it.

# The copy in your home directory (~/.inputrc) is yours, please
# feel free to customise it to create a shell
# environment to your liking.  If you feel a change
# would be benifitial to all, please feel free to send
# a patch to the cygwin mailing list.

# Bind the up arrow to history search, instead of history step
"\e[A": history-search-backward
# And the reverse (down)
"\e[B": history-search-forward

# the following line is actually
# equivalent to "\C-?": delete-char
"\e[3~": delete-char

# VT
"\e[1~": beginning-of-line
"\e[4~": end-of-line

# kvt
"\e[H": beginning-of-line
"\e[F": end-of-line

# rxvt and konsole (i.e. the KDE-app...)
"\e[7~": beginning-of-line
"\e[8~": end-of-line

# VT220
"\eOH": beginning-of-line
"\eOF": end-of-line

# Allow 8-bit input/output
#set meta-flag on
#set convert-meta off
#set input-meta on
#set output-meta on
#$if Bash
  # Don't ring bell on completion
  #set bell-style none

  # or, don't beep at me - show me
  #set bell-style visible

  # Filename completion/expansion
  #set completion-ignore-case on
  #set show-all-if-ambiguous on

  # Expand homedir name
  #set expand-tilde on

  # Append "/" to all dirnames
  #set mark-directories on
  #set mark-symlinked-directories on

  # Match all files
  #set match-hidden-files on

  # 'Magic Space'
  # Insert a space character then performs
  # a history expansion in the line
  #Space: magic-space
#$endif

#if you don't like the annoying end-of-line beeps:
set bell-style none

# to show all characters like Ã¥
set meta-flag On
set input-meta On
set output-meta On
set convert-meta Off

"\C-v": paste-from-clipboard

# Vim mode in bash with cursor improvements. Zsh has different instructions
# First upgrade to Bash 4 on OSX http://clubmate.fi/upgrade-to-bash-4-in-mac-os-x/
# Then add the following lines to your ~/.inputrc:

# Turn on vim mode in bash (and other CLIs, like postgres!). Doesn't work for
# node, ruby, but works for python
set editing-mode vi

# Show the current mode (insert/command) in the bash prompt
set show-mode-in-prompt on

# Cursor options:
#    0 -> blinking block.
#    1 -> blinking block (default).
#    2 -> steady block.
#    3 -> blinking underline.
#    4 -> steady underline.
#    5 -> blinking bar (xterm).
#    6 -> steady bar (xterm).
# Bash colors: https://misc.flogisoft.com/bash/tip_colors_and_formatting

# Set the cursor and prompt prefix for insert and command mode.
# Explanation:
#    \1\e[    Some nonense escape code
#    6        The option from above
#     q\2     (with leading space) more nonense escape code
#    \e[91m   The color of the thing to show in front of prompt (light red)
#    i        The text to put in front of the cursor
#    \e[0m    Reset color code (to be a good citizen)
set vi-ins-mode-string \1\e[6 q\2\e[91mi \e[0m
set vi-cmd-mode-string \1\e[2 q\2\e[31mc \e[0m

