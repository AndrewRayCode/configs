snippet pu
    public

snippet po
    protected

snippet pr
    private

snippet st
    static

snippet fi
    final

snippet ab
    abstract

snippet class
    class ${1} ${2:extends} ${3:#:Parent} ${4:implements} ${5:#:Interface} {
        ${0:TARGET}
    }

snippet interface
    interface ${1} ${2:extends} ${3:#:Parent} {
        ${0:TARGET}
    }

snippet method
    ${1:void} ${2:#:method}(${3}) ${4:throws} {
        ${0:TARGET}
    }

snippet var
    ${1:#:type} ${2:#:var}${3};

snippet co
    static public final ${1:#:type} ${2:#:var} = ${3};${4}

snippet cos
    static public final String ${1:var} = "${2}";${4}

snippet re
    return

snippet as
    assert ${1:#:test} ${2:#:Failure message};${3}

snippet if
    if (${1}) {
        ${2:TARGET}
    }

snippet elif
    else if (${1}) {
        ${2:TARGET}
    }

snippet while
    while (${1}) {
        ${2:TARGET}
    }

snippet for
    for (${1}; ${2}; ${3}) {
        ${4:TARGET}
    }

snippet foreach
alias   fore
    for (${1} : ${2}) {
        ${3:TARGET}
    }

snippet switch
    switch (${1}) {
        ${2:TARGET}
    }

snippet case
abbr ce
    case ${1}:
        ${2:TARGET}
    ${0}

snippet br
    break;

snippet de
    default:
        ${0}

snippet catch
    catch (${1:#:Exception} ${2:e}) {
        ${0}
    }

snippet th
    throw ${0}

snippet sy
    synchronized

snippet im
    import

snippet pa
    package

snippet tc
    public class ${1} extends ${2:TestCase} {
        ${0:TARGET}
    }

snippet test
    public void test${1:#:Name}() throws Exception {
        ${0:TARGET}
    }

snippet import
alias   imt
    import ${1};
    ${0}

snippet j.u
    java.util.

snippet j.i
    java.io.

snippet j.b
    java.beans.

snippet j.n
    java.net

snippet j.m
    java.math.

snippet main
    public static void main(String[] args) {
        ${0}
    }

snippet println
    System.out.println(${1});${0}

snippet print
    System.out.print(${1});${0}

#javadoc
snippet comment
    /**
     * ${0:TARGET}
     */

snippet author
    @author ${0:$TM_FULLNAME}

snippet {code
abbr {
    {@code ${0}

snippet deprecated
    @deprecated ${0:#:description}

snippet {docRoot
abbr {
    {@docRoot

snippet {inheritDoc
abbr {
    {@inheritDoc

snippet {link
abbr {
    {@link ${1:#:target} ${0:#:label}

snippet {linkplain
abbr {
    {@linkplain ${1:#:target} ${0:#:label}

snippet {literal
abbr {
    {@literal ${0}

snippet param
    @param ${1:#:var} ${0:#:description}

snippet return
    @return ${0:#:description}

snippet see
    @see ${0:#:reference}

snippet serial
    @serial ${0:#:description}

snippet sd
    @serialField ${0:#:description}

snippet sf
    @serialField ${1:#:name} ${2:#:type} ${0:#:description}

snippet since
    @since ${0:#:version}

snippet throws
    @throws ${1:#:class} ${0:#:description}

snippet {value
abbr {
    {@value ${0}

snippet version
alias ver
    @version ${0:#:version}

snippet     helloworld
options     head
  public class ${1:Hello} {
    static public void main(String args[]) {
      System.out.println("Hello, world!");
    }
  }
