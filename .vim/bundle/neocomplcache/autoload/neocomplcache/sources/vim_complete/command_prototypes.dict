N[ext]          [count] [++opt] [+cmd]
P[rint]         [count] [flags]
a[ppend]
ab[breviate]
abc[lear]
abo[veleft]     {cmd}
al[l]           [N]
am[enu]
an[oremenu]     {menu}
ar[gs]
arga[dd]        {name} ..
argd[elete]     {pattern} ..
argdo           {cmd}
arge[dit]       [++opt] [+cmd] {name}
argg[lobal]     [++opt] [+cmd] {arglist}
argl[ocal]      [++opt] [+cmd] {arglist}
argu[ment]      [count] [++opt] [+cmd]
as[cii]
au[tocmd]       [group] {event} {pat} [nested] {cmd}
aug[roup]       {name}
aun[menu]       {menu}
bN[ext]         [N]
b[uffer]        {bufname}
ba[ll]          [N]
bad[d]          [+lnum] {fname}
bd[elete]       {bufname}
be[have]        {model}
bel[owright]    {cmd}
bf[irst]
bl[ast]
bm[odified]     [N]
bn[ext]         [N]
bo[tright]      {cmd}
bp[revious]     [N]
br[ewind]
brea[k]
breaka[dd]      func [lnum] {name}
breakd[el]      {nr}
breakl[ist]
bro[wse]        {command}
bufdo         {cmd}
buffers
bun[load]       {bufname}
bw[ipeout]      {bufname}
cN[ext]
cNf[ile]
c[hange]
ca[bbrev]       [<expr>] [lhs] [rhs]
cabc[lear]
cad[dexpr]      {expr}
caddb[uffer]    [bufnr]
caddf[ile]      [errorfile]
cal[l]          {name}([arguments])
cat[ch]         /{pattern}/
cb[uffer]       [bufnr]
cc              [nr]
ccl[ose]
cd              {path}
ce[nter]        [width]
cex[pr]         {expr}
cf[ile]         [errorfile]
cfir[st]        [nr]
cg[etfile]      [errorfile]
cgetb[uffer]    [bufnr]
cgete[xpr]      {expr}
changes
chd[ir]         [path]
che[ckpath]
checkt[ime]
cl[ist]         [from] [, [to]]
cla[st]         [nr]
clo[se]
cm[ap]          {lhs} {rhs}
cmapc[lear]
cme[nu]         {menu}
cn[ext]
cnew[er]        [count]
cnf[ile]
cno[remap]      {lhs} {rhs}
cnorea[bbrev]   [<expr>] [lhs] [rhs]
cnoreme[nu]     {menu}
co[py]          {address}
col[der]        [count]
colo[rscheme]   {name}
com[mand]       [-bang -complete= -nargs=...] {cmdname} {call function(<args>)} | {rep}
comc[lear]
comp[iler]      {name}
con[tinue]
conf[irm]       {command}
cope[n]         [height]
cp[revious]
cpf[ile]
cq[uit]
cr[ewind]       [nr]
cs[cope]        add {file|dir} [pre-path] [flags] | find {querytype} {name} | kill {num|partial_name} | help | reset | show
cst[ag]
cu[nmap]        {lhs}
cuna[bbrev]     {lhs}
cunme[nu]       {menu}
cw[indow]       [height]
d[elete]        [x]
deb[ug]         {cmd}
debugg[reedy]
del[command]    {cmd}
delf[unction]   {name}
delm[arks]      {marks}
di[splay]       [arg]
diffg[et]       [bufspec]
diffo[ff]
diffp[atch]     {patchfile}
diffpu[t]       [bufspec]
diffs[plit]     {filename}
diffthis
diffu[pdate]
dig[raphs]      {char1}{char2} {number} ...
dj[ump]         [count] [/]string[/]
dl[ist]         [/]string[/]
do[autocmd]     [group] {event} [fname]
doautoa[ll]     [group] {event} [fname]
dr[op]          [++opt] [+cmd] {file} ..
ds[earch]       [count] [/]string[/]
dsp[lit]        [count] [/]string[/]
e[dit]          [++opt] [+cmd] {file}
ea[rlier]       {count} | {N}s | {N}h
ec[ho]          {expr1} ..
echoe[rr]       {expr1} ..
echoh[l]        {expr1} ..
echom[sg]       {expr1} ..
echon           {expr1} ..
el[se]
elsei[f]        {expr1}
em[enu]         {menu}
en[dif]
endf[unction]
endfo[r]
endt[ry]
endw[hile]
ene[w]
ex              [++opt] [+cmd] [file]
exe[cute]       {expr1} ..
exi[t]          [++opt] [file]
exu[sage]
f[ile]
files
filet[ype]
fin[d]          [++opt] [+cmd] {file}
fina[lly]
fini[sh]
fir[st]         [++opt] [+cmd]
fix[del]
fo[ld]
foldc[lose]
foldd[oopen]    {cmd}
folddoc[losed]  {cmd}
foldo[pen]
for             {var} in {list}
fu[nction]      {name}([arguments]) [range] [abort] [dict]
go[to]          [count]
gr[ep]          [arguments]
grepa[dd]       [arguments]
gu[i]           [++opt] [+cmd] [-f|-b] [files...]
gv[im]          [++opt] [+cmd] [-f|-b] [files...]
h[elp]          {subject}
ha[rdcopy]      [arguments]
helpf[ind]
helpg[rep]      {pattern}[@xx]
helpt[ags]      [++t] {dir}
hi[ghlight]     [default] {group-name} {key}={arg} ..
hid[e]          {cmd}
his[tory]       [{name}] [{first}][, [{last}]]
i[nsert]
ia[bbrev]       [<expr>] [lhs] [rhs]
iabc[lear]
if              {expr1}
ij[ump]       [count] [/]pattern[/]
il[ist]         [/]pattern[/]
im[ap]          {lhs} {rhs}
imapc[lear]
imenu           {menu}
ino[remap]      {lhs} {rhs}
inorea[bbrev]   [<expr>] [lhs] [rhs]
inoreme[nu]     {menu}
int[ro]
is[earch]       [count] [/]pattern[/]
isp[lit]        [count] [/]pattern[/]
iu[nmap]        {lhs}
iuna[bbrev]     {lhs}
iunme[nu]       {menu}
j[oin]          {count} [flags]
ju[mps]
kee[pmarks]     {command}
keep[jumps]     {command}
keepa[lt]       {cmd}
lN[ext]
lNf[ile]
l[ist]          [count] [flags]
la[st]          [++opt] [+cmd]
lad[dexpr]      {expr}
laddb[uffer]    [bufnr]
laddf[ile]      [errorfile]
lan[guage]      {name} | mes[sages] {name} | cty[pe] {name} | tim[e] {name}
lat[er]         {count} | {N}s | {N}m | {N}h
lb[uffer]       [bufnr]
lc[d]           {path}
lch[dir]        {path}
lcl[ose]
lcs[cope]       add {file|dir} [pre-path] [flags] | find {querytype} {name} | kill {num|partial_name} | help | reset | show
le[ft]          [indent]
lefta[bove]     {cmd}
let             {var-name} = {expr1}
lex[pr]         {expr}
lf[ile]         [errorfile]
lfir[st]        [nr]
lg[etfile]      [errorfile]
lgetb[uffer]    [bufnr]
lgete[xpr]      {expr}
lgr[ep]         [arguments]
lgrepa[dd]      [arguments]
lh[elpgrep]     {pattern}[@xx]
ll              [nr]
lla[st]         [nr]
lli[st]         [from] [, [to]]
lm[ap]          {lhs} {rhs}
lmak[e]         [arguments]
lmapc[lear]
ln[oremap]      {lhs} {rhs}
lne[xt]
lnew[er]        [count]
lnf[ile]
lo[adview]      [nr]
loadk[eymap]
loc[kmarks]     {command}
lockv[ar]       [depth] {name} ...
lol[der]        [count]
lop[en]         [height]
lp[revious]
lpf[ile]
lr[ewind]       [nr]
ls
lt[ag]          [ident]
lua             {chunk} | << {endmarker}
luado           {body}
luafile         {file}
lu[nmap]        {lhs}
lv[imgrep]      /{pattern}/[g][j] {file} ... | {pattern} {file} ...
lvimgrepadd     /{pattern}/[g][j] {file} ... | {pattern} {file} ...
lwindow         [height]
m[ove]          {address}
ma[rk]          {a-zA-z'}
mak[e]          [arguments]
map             {lhs} {rhs}
mapc[lear]
marks
match           {group} /{pattern}/
menu            {menu}
menut[ranslate] clear | {english} {mylang}
mes[sages]      
mk[exrc]        [file]
mks[ession]     [file]
mksp[ell]       [-ascii] {outname} {inname} ...
mkv[imrc]       [file]
mkvie[w]        [file]
mod[e]          [mode]
mz[scheme]      {stmt} | << {endmarker} {script} {endmarker} | {file}
mzf[ile]        {file}
n[ext]          [++opt] [+cmd]
nb[key]         key
new
nm[ap]          {lhs} {rhs}
nmapc[lear]
nmenu           {menu}
nno[remap]      {lhs} {rhs}
nnoreme[nu]     {menu}
no[remap]       {lhs} {rhs} 
noa[utocmd]     {cmd}
noh[lsearch]    
norea[bbrev]    [<expr>] [lhs] [rhs]
noreme[nu]      {menu}
norm[al]        {commands}
nu[mber]        [count] [flags]
nun[map]        {lhs}
nunme[nu]       {menu}
o[pen]          /pattern/
ol[dfiles]
om[ap]          {lhs} {rhs}
omapc[lear]
ome[nu]         {menu}
on[ly]
ono[remap]      {lhs} {rhs}
onoreme[nu]     {menu}
opt[ions]
ou[nmap]        {lhs}
ounmenu         {menu}
ownsyntax       list {group-name} | list @{cluster-name}
p[rint]         {count} [flags]
pc[lose]
pe[rl]          {cmd} | << {endpattern} {script} {endpattern}
ped[it]         [++opt] [+cmd] {file}
perld[o]        {cmd}
po[p]
popu[p]         {name}
pp[op]
pre[serve]
prev[ious]      [count] [++opt] [+cmd]
prof[ile]       start {fname} | pause | continue | func {pattern} | file {pattern}
profd[el]       ...
promptf[ind]    [string]
promptr[epl]    [string]
ps[earch]       [count] [/]pattern[/]
ptN[ext]
pta[g]          [tagname]
ptf[irst]
ptj[ump]
ptl[ast]
ptn[ext]
ptp[revious]
ptr[ewind]
pts[elect]      [ident]
pu[t]           [x]
pw[d]
py[thon]        {stmt} | << {endmarker} {script} {endmarker}
python3         {stmt} | << {endmarker} {script} {endmarker}
pyf[ile]        {file}
py3f[ile]       {file}
q[uit]
qa[ll]
quita[ll]
r[ead]          [++opt] [name]
rec[over]       [file]
red[o]
redi[r]         > {file} | >> {file} | @{a-zA-Z} | => {var} | END
redr[aw]
redraws[tatus]
reg[isters]     {arg}
res[ize]
ret[ab]         [new_tabstop]
retu[rn]        [expr]
rew[ind]        [++opt] [+cmd]
ri[ght]         [width]
rightb[elow]    {cmd}
rub[y]          {cmd} | << {endpattern} {script} {endpattern}
rubyd[o]        {cmd}
rubyf[ile]      {file}
runtime         {file} ..
rv[iminfo]      [file]
sN[ext]         [++opt] [+cmd] [N]
s[ubstitute]    /{pattern}/{string}/[flags] [count]
sa[rgument]     [++opt] [+cmd] [N]
sal[l]
san[dbox]       {cmd}
sav[eas]        [++opt] {file}
sbN[ext]        [N]
sb[uffer]       {bufname}
sba[ll]         [N]
sbf[irst]
sbl[ast]
sbm[odified]    [N]
sbn[ext]        [N]
sbp[revious]    [N]
sbr[ewind]
scrip[tnames]
scripte[ncoding] [encoging]
scscope               add {file|dir} [pre-path] [flags] | find {querytype} {name} | kill {num|partial_name} | help | reset | show
se[t]                 {option}={value} {option}? | {option} | {option}&
setf[iletype]   {filetype}
setg[lobal]     ...
setl[ocal]      ...
sf[ind]         [++opt] [+cmd] {file}
sfir[st]        [++opt] [+cmd]
sh[ell]
sig[n]          define {name} {argument}... | icon={pixmap} | linehl={group} | text={text} | texthl={group}
sil[ent]        {command}
sim[alt]        {key}
sl[eep]         [N] [m]
sla[st]         [++opt] [+cmd]
sm[agic]        ...
sm[ap]          {lhs} {rhs}
smapc[lear]
sme[nu]         {menu}
sn[ext]         [++opt] [+cmd] [file ..]
sni[ff]         request [symbol]
sno[remap]      {lhs} {rhs}
snoreme[nu]     {menu}
so[urce]        {file}
sor[t]          [i][u][r][n][x][o] [/{pattern}/]
sp[lit]         [++opt] [+cmd]
spe[llgood]     {word}
spelld[ump]
spelli[nfo]     
spellr[epall]
spellu[ndo]     {word}
spellw[rong]    {word}
spr[evious]     [++opt] [+cmd] [N]
sre[wind]       [++opt] [+cmd]
st[op]
sta[g]          [tagname]
star[tinsert]
startg[replace]
startr[eplace]
stj[ump]        [ident]
stopi[nsert]
sts[elect]      [ident]
sun[hide]       [N]
sunm[ap]        {lhs}
sunme[nu]       {menu}
sus[pend]
sv[iew]         [++opt] [+cmd] {file}
sw[apname]
sy[ntax]        list {group-name} | list @{cluster-name}
sync[bind]
t
tN[ext]
ta[g]           {ident}
tab             {cmd}
tabN[ext]
tabc[lose]
tabd[o]         {cmd}
tabe[dit]       [++opt] [+cmd] {file}
tabf[ind]       [++opt] [+cmd] {file}
tabfir[st]
tabl[ast]
tabm[ove]       [N]
tabn[ext]
tabnew          [++opt] [+cmd] {file}
tabo[nly]
tabp[revious]
tabr[ewind]
tabs
tags
tc[l]           {cmd} | {endmarker} {script} {endmarker}
tcld[o]         {cmd}
tclf[ile]       {file}
te[aroff]       {name}
tf[irst]
th[row]         {expr1}
tj[ump]         [ident]
tl[ast]         
tm[enu]         {menu}
tn[ext]
to[pleft]       {cmd}
tp[revious]
tr[ewind]
try
tselect
tu[nmenu]       {menu}
u[ndo]          {N}
una[bbreviate]  {lhs}
undoj[oin]
undol[ist]
unh[ide]        [N]
unl[et]         {name} ...
unlo[ckvar]     [depth] {name} ...
unm[ap]         {lhs}
unme[nu]        {menu}
uns[ilent]      {command}
up[date]        [++opt] [>>] [file]
ve[rsion]
verb[ose]       {command}
vert[ical]      {cmd}
vg[lobal]       /{pattern}/[cmd]
vi[sual]        [++opt] [+cmd] [file]
vie[w]          [++opt] [+cmd] file
vim[grep]       /{pattern}/[g][j] {file} ... | {pattern} {file} ...
vimgrepa[dd]    /{pattern}/[g][j] {file} ... | {pattern} {file} ...
viu[sage]
vm[ap]          {lhs} {rhs}
vmapc[lear]
vmenu           {menu}
vn[oremap]      {lhs} {rhs}
vne[w]          [++opt] [+cmd] [file]
vnoremenu       {menu}
vsp[lit]        [++opt] [+cmd] [file]
vu[nmap]        {lhs}
vunmenu         {menu}
wN[ext]         [++opt] [file]
w[rite]         [++opt] [file]
wa[ll]
wh[ile]         {expr1}
win[size]       {width} {height}
winc[md]        {arg}
windo           {cmd}
winp[os]        {X} {Y}
wn[ext]         [++opt]
wp[revious]     [++opt] [file]
wq              [++opt]
wqa[ll]         [++opt]
ws[verb]        verb
wv[iminfo]      [file]
x[it]           [++opt] [file]
xa[ll]          [++opt]
xm[ap]          {lhs} {rhs}
xmapc[lear]
xmenu           {menu}
xn[oremap]      {lhs} {rhs}
xnoremenu       {menu}
xu[nmap]        {lhs}
xunmenu         {menu}
y[ank]          [x] {count}
